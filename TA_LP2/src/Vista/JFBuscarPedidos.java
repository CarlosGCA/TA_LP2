/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.PedidoBL;
import Modelo.Cliente;
import Modelo.Empresa;
import Modelo.Natural;
import Modelo.PedidoProducto;
import Modelo.Producto;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alulab14
 */
public class JFBuscarPedidos extends javax.swing.JDialog {

    private PedidoBL logicaNegocio;
    private ArrayList<PedidoProducto> listaPedidos;
    private PedidoProducto pedidoElegido;
    private ArrayList<PedidoProducto> listaFiltroPedidos;//
    private ArrayList<PedidoProducto> listaFiltroPedidosEst;
    private Boolean filtrado;
//    private ArrayList<Empresa> listaFiltrEmpresa;
//    private ArrayList<Natural> listaNatural; 
//    private ArrayList<Empresa> listaEmpresa; 

    /**
     * @return the pedidoElegido
     */
    public PedidoProducto getPedidoElegido() {
        return pedidoElegido;
    }

    /**
     * @param pedidoElegido the pedidoElegido to set
     */
    public void setPedidoElegido(PedidoProducto pedidoElegido) {
        this.pedidoElegido = pedidoElegido;
    }

    /**
     * Creates new form JModificar
     */
    public JFBuscarPedidos(JDialog d, Boolean b) {
        super(d, b);
        initComponents();
        logicaNegocio = new PedidoBL();
        listaPedidos = new ArrayList<PedidoProducto>(logicaNegocio.listarPedidos());
        DefaultTableModel modelo = (DefaultTableModel) tablePedidos.getModel();
        Object[] fila = new Object[6];
        for (int i = 0; i < listaPedidos.size(); i++) {
            fila[0] = listaPedidos.get(i).getidPedido();

            Date fechaReg = listaPedidos.get(i).getfechaRegPed();
            SimpleDateFormat formatoFechaReg = new SimpleDateFormat("dd/MM/yyyy");
            fila[1] = formatoFechaReg.format(fechaReg);

            Date fechaEnt = listaPedidos.get(i).getfechaEntrPed();
            SimpleDateFormat formatoFechaEnt = new SimpleDateFormat("dd/MM/yyyy");
            fila[2] = formatoFechaEnt.format(fechaEnt);

            fila[3] = listaPedidos.get(i).getestadoPed();

            if (listaPedidos.get(i).getcliente() instanceof Natural) {
                Natural nat = (Natural) listaPedidos.get(i).getcliente();
                fila[4] = nat.getNombre() + " " + nat.getApellidos();
                fila[5] = "Natural";
            } else {
                Empresa emp = (Empresa) listaPedidos.get(i).getcliente();
                fila[4] = emp.getRazonSocial();
                fila[5] = "Empresa";
            }

            modelo.addRow(fila);
            setTitle("Busqueda de Pedidos");
            filtrado=false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablePedidos = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSelect = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        btnFiltrar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbbEstado = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tablePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdPedido", "Fecha Registro", "Fecha Entrega", "Estado Pedido", "Cliente", "Tipo Cliente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablePedidos);

        btnSalir.setText("Cerrar");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel1.setText("Tabla Pedidos:");

        btnSelect.setText("Seleccionar");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        jLabel2.setText("Cliente:");

        txtFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroActionPerformed(evt);
            }
        });

        btnFiltrar.setText("Filtrar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        jLabel3.setText("Estado");

        cbbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Pendiente", "EnProceso", "Listo", "Finalizado", "Cancelado" }));
        cbbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSelect)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                                    .addComponent(cbbEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(48, 48, 48)
                                .addComponent(btnFiltrar)))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalir)
                            .addComponent(btnSelect)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltrar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        //JFramePedidos.value=0;
        super.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        // TODO add your handling code here:
        try {
            if (!filtrado) {
                setPedidoElegido(new PedidoProducto());
                setPedidoElegido(listaPedidos.get(tablePedidos.getSelectedRow()));
                pedidoElegido.setListaLineasPedido(logicaNegocio.listarLineasPedido(pedidoElegido.getidPedido()));
                super.dispose();
            } else {
                setPedidoElegido(new PedidoProducto());
                setPedidoElegido(listaFiltroPedidos.get(tablePedidos.getSelectedRow()));
                pedidoElegido.setListaLineasPedido(logicaNegocio.listarLineasPedido(pedidoElegido.getidPedido()));
                super.dispose();
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        // TODO add your handling code here:
        String filtro = txtFiltro.getText().toLowerCase();
        listaFiltroPedidos = new ArrayList<PedidoProducto>();
        
        if(cbbEstado.getSelectedItem().toString()!=""){
            listaFiltroPedidosEst=new ArrayList<PedidoProducto>();
            for(PedidoProducto pp : listaPedidos){
                if(pp.getestadoPed().toString()==cbbEstado.getSelectedItem().toString()){
                    listaFiltroPedidosEst.add(pp);
                }
            }
        }else{
            listaFiltroPedidosEst=new ArrayList<PedidoProducto>(listaPedidos);
        }
        
        for (int i = 0; i < listaFiltroPedidosEst.size(); i++) {
            if (listaFiltroPedidosEst.get(i).getcliente() instanceof Natural) {
                Natural nat = (Natural) listaFiltroPedidosEst.get(i).getcliente();
                if (nat.getNombre().toLowerCase().contains(filtro) || nat.getApellidos().toLowerCase().contains(filtro)) {
                    listaFiltroPedidos.add(listaFiltroPedidosEst.get(i));
                }
            } else {
                Empresa emp = (Empresa) listaFiltroPedidosEst.get(i).getcliente();
                if (emp.getRazonSocial().toLowerCase().contains(filtro)) {
                    listaFiltroPedidos.add(listaFiltroPedidosEst.get(i));
                }
            }
        }
        DefaultTableModel modelo = (DefaultTableModel) tablePedidos.getModel();
        modelo.setRowCount(0);
        Object[] fila = new Object[6];
        for (int i = 0; i < listaFiltroPedidos.size(); i++) {
            //fila[0] = listaEmpleados.get(i).getID();
            fila[0] = listaFiltroPedidos.get(i).getidPedido();

            Date fechaReg = listaFiltroPedidos.get(i).getfechaRegPed();
            SimpleDateFormat formatoFechaReg = new SimpleDateFormat("dd/MM/yyyy");
            fila[1] = formatoFechaReg.format(fechaReg);

            Date fechaEnt = listaFiltroPedidos.get(i).getfechaEntrPed();
            SimpleDateFormat formatoFechaEnt = new SimpleDateFormat("dd/MM/yyyy");
            fila[2] = formatoFechaEnt.format(fechaEnt);

            fila[3] = listaFiltroPedidos.get(i).getestadoPed();
            if (listaFiltroPedidos.get(i).getcliente() instanceof Natural) {
                Natural nat = (Natural) listaFiltroPedidos.get(i).getcliente();
                fila[4] = nat.getNombre() + " " + nat.getApellidos();
                fila[5] = "Natural";
            } else {
                Empresa emp = (Empresa) listaFiltroPedidos.get(i).getcliente();
                fila[4] = emp.getRazonSocial();
                fila[5] = "Empresa";
            }

            modelo.addRow(fila);
            
            if(filtro!="" || cbbEstado.getSelectedItem().toString()!="")
                filtrado=true;
            else
                filtrado=false;
        }
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void txtFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroActionPerformed

    private void cbbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbEstadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFBuscarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFBuscarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFBuscarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFBuscarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFBuscarPedidos(null, false).setVisible(true);
                } catch (Exception ex) {
                    System.out.println(ex.getMessage());
                }
                //new JModificar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSelect;
    private javax.swing.JComboBox<String> cbbEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablePedidos;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
