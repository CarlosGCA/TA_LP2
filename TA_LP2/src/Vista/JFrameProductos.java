/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import java.awt.Dialog;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import Modelo.Insumo;
import Modelo.*;
import javax.swing.table.DefaultTableModel;
import Controlador.*;
import javax.swing.JOptionPane;
import java.util.ArrayList;

/**
 *
 * @author Sebastian
 */
public class JFrameProductos extends javax.swing.JDialog{

    /**
     * Creates new form JFrameProductos
     */
    private Insumo insumoElegido;
    private DefaultTableModel aux;
    private Producto p = new Producto();
    private ProductoAdmiBL logicaNegocio = new ProductoAdmiBL();
    public static JFModificarProducto objModificarProducto;
    public static JFEliminarProducto objEliminarProducto;
    private ArrayList<Ingrediente> ingredientes; 
    int idMax;
    
    public JFrameProductos(Dialog f, Boolean b) {
        super(f,b);
        initComponents();
        textID.setText(String.valueOf(logicaNegocio.obtenerID()));
        idMax=Integer.parseInt(textID.getText());
        aux= (DefaultTableModel) jTable1.getModel(); 
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent e) {
                //JFramePedidos.value=0;
            }
        });
    }
    
    public Insumo getInsumoElegido(){
        return insumoElegido;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelID = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        textID = new javax.swing.JTextField();
        textNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnEliminarInsumo = new javax.swing.JButton();
        btnRegistarProducto = new javax.swing.JButton();
        btnModificarProducto = new javax.swing.JButton();
        btnEliminarProducto = new javax.swing.JButton();
        labelPrecio = new javax.swing.JLabel();
        textPrecio = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        labelReceta = new javax.swing.JLabel();
        texIDInsumo = new javax.swing.JTextField();
        textNombreInsumo = new javax.swing.JTextField();
        textUnidadInsumo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textCantidadInsumo = new javax.swing.JTextField();
        btnBuscarInsumo = new javax.swing.JButton();
        btnAgregarInsumo = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Datos de Productos");

        labelID.setText("ID ");

        labelNombre.setText("Nombre");

        textID.setEditable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre Insumo", "Cantidad", "Unidad de Medida"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(15);
        }

        btnEliminarInsumo.setText("Eliminar Insumo");
        btnEliminarInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInsumoActionPerformed(evt);
            }
        });

        btnRegistarProducto.setText("Registrar");
        btnRegistarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistarProductoActionPerformed(evt);
            }
        });

        btnModificarProducto.setText("Modificar");
        btnModificarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarProductoActionPerformed(evt);
            }
        });

        btnEliminarProducto.setText("Eliminar");
        btnEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductoActionPerformed(evt);
            }
        });

        labelPrecio.setText("Precio");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelReceta.setText("Receta");

        texIDInsumo.setEditable(false);

        textNombreInsumo.setEditable(false);
        textNombreInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNombreInsumoActionPerformed(evt);
            }
        });

        textUnidadInsumo.setEditable(false);
        textUnidadInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textUnidadInsumoActionPerformed(evt);
            }
        });

        jLabel2.setText("ID");

        jLabel3.setText("Nombre");

        jLabel4.setText("Unidad de Medida");

        jLabel5.setText("Cantidad");

        textCantidadInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCantidadInsumoActionPerformed(evt);
            }
        });

        btnBuscarInsumo.setText("Buscar Insumo");
        btnBuscarInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarInsumoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelReceta)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(76, 76, 76)
                            .addComponent(textCantidadInsumo, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGap(34, 34, 34)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textNombreInsumo, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                .addComponent(texIDInsumo)
                                .addComponent(textUnidadInsumo)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(btnBuscarInsumo))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelReceta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(texIDInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(btnBuscarInsumo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNombreInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textUnidadInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textCantidadInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        btnAgregarInsumo.setText("Agregar Insumo");
        btnAgregarInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarInsumoActionPerformed(evt);
            }
        });

        jLabel6.setText("Descripcion");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        btnLimpiar.setText("Limpiar Datos");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminarInsumo)
                            .addComponent(btnAgregarInsumo)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelID)
                                .addGap(74, 74, 74)
                                .addComponent(textID))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelNombre)
                                    .addComponent(labelPrecio))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRegistarProducto)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnModificarProducto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminarProducto))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnRegistarProducto)
                    .addComponent(btnModificarProducto)
                    .addComponent(btnEliminarProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelID)
                                    .addComponent(textID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNombre))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPrecio)
                            .addComponent(textPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnAgregarInsumo)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarInsumo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarInsumoActionPerformed
        // TODO add your handling code here:
        JFBuscarInsumo bi = new JFBuscarInsumo(this,true);
        bi.setVisible(true);        
        Object [] fila = new Object [4];
        unidadMed um;
        if(!(bi.getinsumoSeleccionado()==null)){
            insumoElegido = bi.getinsumoSeleccionado();
            texIDInsumo.setText(Integer.toString(insumoElegido.getidInsumo()));
            textNombreInsumo.setText(insumoElegido.getNombre());
            String aux="";
            um = insumoElegido.getunidMed();
            if(um == unidadMed.kg)  aux= "KILOGRAMOS";
            else if(um == unidadMed.cajas) aux = "CAJAS";
            else if(um == unidadMed.lt) aux = "LITROS";
            else if(um == unidadMed.unid) aux = "UNIDADES";      
            textUnidadInsumo.setText(aux);
        }
    }//GEN-LAST:event_btnBuscarInsumoActionPerformed

    private void btnRegistarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistarProductoActionPerformed
        // TODO add your handling code here:
        
        try{
            int idProducto = Integer.parseInt(textID.getText());
            String nombreProducto = textNombre.getText();
            float precioProducto = Float.parseFloat(textPrecio.getText());
            float precio;
            String auxprecio = textPrecio.getText();
            String descripcion = jTextArea1.getText();
            
            if(nombreProducto.equals(""))
                throw new Exception("Ingrese un nombre valido");
            if(!nombreProducto.matches("^[A-Za-z ]*$") || !nombreProducto.matches("^[0-9]*$"))
                throw new Exception("Nombre ingresado invalido, solo letras y numeros");
            if(nombreProducto.length()>60) 
                throw new Exception("Ingrese un nombre mas corto");
            if(descripcion.equals(""))
                throw new Exception ("Ingreso una descripcion valida");
            if(auxprecio.equals(""))
                throw new Exception ("Ingrese un precio");
            
            try{
                precio = Float.parseFloat(auxprecio);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Ingrese un precio correcto", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
            }

            if(idProducto<idMax){
                int resul=logicaNegocio.actualizarProducto(idProducto, nombreProducto, precioProducto, descripcion);
                int aux=0,aux1=0;
                for(int i=0;i<ingredientes.size();i++){
                    int idaux=0,habilaux=0;
                    if(ingredientes.get(i).getidIngrediente() != 0) idaux=ingredientes.get(i).getidIngrediente();
                    else idaux=ingredientes.get(i).getinsumo().getidInsumo();
                    if(ingredientes.get(i).getHabilitado()) habilaux=1;
                    aux =logicaNegocio.actualizarIngrediente(ingredientes.get(i).getidIngrediente(),ingredientes.get(i).getcantidad(),ingredientes.get(i).getinsumo().getidInsumo(),habilaux);
                    aux1= logicaNegocio.actualizarIngredientesxProducto(aux, idProducto, habilaux);
                }

                if((resul>0)&&(aux>0)&&(aux1>0)) JOptionPane.showMessageDialog(null, "Se ha modificado con exito", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
            
            }else{
                int resul=logicaNegocio.registrarProducto(idProducto, nombreProducto, precioProducto,descripcion);  
                int aux=0,aux1=0;
                for(int i=0;i<p.getReceta().size();i++){
                   aux =logicaNegocio.registrarIngrediente(p.getReceta().get(i).getcantidad(), p.getReceta().get(i).getinsumo().getidInsumo());
                   aux1= logicaNegocio.registarIngredientexProducto(aux,idProducto);
                }

                if((resul>0)&&(aux>0)&&(aux1>0)) JOptionPane.showMessageDialog(null, "Se ha agregado con exito", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage(), "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
        }
         
            
    }//GEN-LAST:event_btnRegistarProductoActionPerformed

    private void btnModificarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarProductoActionPerformed
        // TODO add your handling code here:
        objModificarProducto = new JFModificarProducto(this,true);
        objModificarProducto.setVisible(true);
        
         if(objModificarProducto.getproductoSeleccionado()!= null){
            Producto productoSeleccionado = objModificarProducto.getproductoSeleccionado(); 
            ingredientes = objModificarProducto.getIngredientes();
            textID.setText(Integer.toString(productoSeleccionado.getidProducto()));
            textNombre.setText(productoSeleccionado.getnombProducto());
            textPrecio.setText(Float.toString(productoSeleccionado.getprecio()));
            jTextArea1.setText(productoSeleccionado.getDescripcion());
            
            DefaultTableModel aux= (DefaultTableModel) jTable1.getModel();
            aux.setRowCount(0);
            Object [] fila = new Object [4];
            unidadMed um;
            for(int i=0;i<ingredientes.size();i++){
                fila[0] = ingredientes.get(i).getidIngrediente();
                fila[1] = ingredientes.get(i).getinsumo().getNombre();
                fila[2] = ingredientes.get(i).getcantidad();
                um = ingredientes.get(i).getinsumo().getunidMed();
                if(um == unidadMed.kg) fila[3] = "KILOGRAMOS";
                else if(um == unidadMed.cajas) fila[3] = "CAJAS";
                else if(um == unidadMed.lt) fila[3] = "LITROS";
                else if(um == unidadMed.unid) fila[3] = "UNIDADES";
                aux.addRow(fila);
            }
            
            
         }
    }//GEN-LAST:event_btnModificarProductoActionPerformed

    private void btnEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductoActionPerformed
        // TODO add your handling code here:
        objEliminarProducto = new JFEliminarProducto(this,true);
        objEliminarProducto.setVisible(true);
        if(objEliminarProducto.getResultado()>0) JOptionPane.showMessageDialog(null, "Se ha eliminado con exito", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
//        JFModificarProducto bp = new JFModificarProducto(this,true);
//        bp.setVisible(true);
    }//GEN-LAST:event_btnEliminarProductoActionPerformed

    private void btnEliminarInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInsumoActionPerformed
        // TODO add your handling code here:
       int colum=1;
        int row = jTable1.getSelectedRow();
        String iSeleccionado = jTable1.getModel().getValueAt(row, colum).toString();
        int indx = jTable1.getSelectedRow();
        
        if(ingredientes!=null){
            for(int i=0;i<ingredientes.size();i++){
                if(ingredientes.get(i).getinsumo().getNombre()== iSeleccionado)
                    ingredientes.get(i).setHabilitado(false);
            }
            //ingredientes.get(row).setHabilitado(false);
            //ingredientes.remove(indx);
            aux.setRowCount(0);
            Object[] fila = new Object[4];
            unidadMed um;
            for(int j=0; j<ingredientes.size(); j++){
                if(ingredientes.get(j).getHabilitado()){
                    int idaux=0;
                    if(ingredientes.get(j).getidIngrediente() != 0) idaux=ingredientes.get(j).getidIngrediente();
                    else idaux=ingredientes.get(j).getinsumo().getidInsumo();
                    fila[0] = idaux;
                    fila[1] = ingredientes.get(j).getinsumo().getNombre();
                    fila[2] = ingredientes.get(j).getcantidad();
                    um = ingredientes.get(j).getinsumo().getunidMed();
                    if(um == unidadMed.kg) fila[3] = "KILOGRAMOS";
                    else if(um == unidadMed.cajas) fila[3] = "CAJAS";
                    else if(um == unidadMed.lt) fila[3] = "LITROS";
                    else if(um == unidadMed.unid) fila[3] = "UNIDADES";   
                    aux.addRow(fila);                    
                }
                
            }   
        }else{           
            p.getReceta().remove(indx);
            aux.setRowCount(0);
            Object[] fila = new Object[5];
            unidadMed um;
            for(int j=0; j<p.getReceta().size(); j++){
                fila[0] = p.getReceta().get(j).getinsumo().getidInsumo();
                fila[1] = p.getReceta().get(j).getinsumo().getNombre();
                fila[2] = p.getReceta().get(j).getcantidad();
                um = insumoElegido.getunidMed();
                if(um == unidadMed.kg) fila[3] = "KILOGRAMOS";
                else if(um == unidadMed.cajas) fila[3] = "CAJAS";
                else if(um == unidadMed.lt) fila[3] = "LITROS";
                else if(um == unidadMed.unid) fila[3] = "UNIDADES";   
                aux.addRow(fila);
        }
           
       }
        
    }//GEN-LAST:event_btnEliminarInsumoActionPerformed

    private void textCantidadInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCantidadInsumoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCantidadInsumoActionPerformed

    private void textUnidadInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textUnidadInsumoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textUnidadInsumoActionPerformed

    private void textNombreInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNombreInsumoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNombreInsumoActionPerformed

    private void btnAgregarInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarInsumoActionPerformed
        // TODO add your handling code here:
        try{
            if(ingredientes!=null){
            int cantidad = Integer.parseInt(textCantidadInsumo.getText());
            String auxCant= textCantidadInsumo.getText();
            
            if(auxCant.equals(""))
                throw new Exception("Ingrese una cantidad");
            if(!auxCant.matches("^[0-9]*$"))
                throw new Exception("Cantidad invalida, solo numeros");
            
            String auxidInsumo = texIDInsumo.getText();
            String auxcantInsumo = textCantidadInsumo.getText();
            String auxnombreInsumo = textNombreInsumo.getText();
            String auxunidadInsumo = textUnidadInsumo.getText();
            if(auxidInsumo.equals(""))
                throw new Exception("Seleccione un insumo");
            if(auxcantInsumo.equals(""))
                throw new Exception("Seleccione un insumo");
            if(auxnombreInsumo.equals(""))
                throw new Exception("Seleccione un insumo");
            if(auxunidadInsumo.equals(""))
                throw new Exception("Seleccione un insumo");
            
            Ingrediente i = new Ingrediente(cantidad,insumoElegido);
            ingredientes.add(i);
            Object[] fila = new Object[4];
            aux.setRowCount(0);
            unidadMed um;
            for(int j=0; j<ingredientes.size(); j++){
                if(ingredientes.get(j).getHabilitado()){
                    int idaux=0;
                    if(ingredientes.get(j).getidIngrediente() != 0) idaux=ingredientes.get(j).getidIngrediente();
                    else idaux=ingredientes.get(j).getinsumo().getidInsumo();
                    fila[0] = idaux;
                    fila[1] = ingredientes.get(j).getinsumo().getNombre();
                    fila[2] = ingredientes.get(j).getcantidad();
                    um = ingredientes.get(j).getinsumo().getunidMed();
                    if(um == unidadMed.kg) fila[3] = "KILOGRAMOS";
                    else if(um == unidadMed.cajas) fila[3] = "CAJAS";
                    else if(um == unidadMed.lt) fila[3] = "LITROS";
                    else if(um == unidadMed.unid) fila[3] = "UNIDADES";   
                    aux.addRow(fila);                    
                }
                
            }   
            
            
            
            }else{
                int cantidad = Integer.parseInt(textCantidadInsumo.getText());
                Ingrediente i = new Ingrediente(cantidad,insumoElegido);
                String auxCant= textCantidadInsumo.getText();
            
                if(auxCant.equals(""))
                    throw new Exception("Ingrese una cantidad");
                if(!auxCant.matches("^[0-9]*$"))
                    throw new Exception("Cantidad invalida, solo numeros");
                
                String auxidInsumo = texIDInsumo.getText();
                String auxcantInsumo = textCantidadInsumo.getText();
                String auxnombreInsumo = textNombreInsumo.getText();
                String auxunidadInsumo = textUnidadInsumo.getText();
                if(auxidInsumo.equals(""))
                    throw new Exception("Seleccione un insumo");
                if(auxcantInsumo.equals(""))
                    throw new Exception("Seleccione un insumo");
                if(auxnombreInsumo.equals(""))
                    throw new Exception("Seleccione un insumo");
                if(auxunidadInsumo.equals(""))
                    throw new Exception("Seleccione un insumo");
                
                p.agregarIngrediente(i);
                Object[] fila = new Object[4];
                aux.setRowCount(0);
                unidadMed um;
                for(int j=0; j<p.getReceta().size(); j++){
                    fila[0] = p.getReceta().get(j).getinsumo().getidInsumo();
                    fila[1] = p.getReceta().get(j).getinsumo().getNombre();
                    fila[2] = p.getReceta().get(j).getcantidad();
                    um = insumoElegido.getunidMed();
                    if(um == unidadMed.kg) fila[3] = "KILOGRAMOS";
                    else if(um == unidadMed.cajas) fila[3] = "CAJAS";
                    else if(um == unidadMed.lt) fila[3] = "LITROS";
                    else if(um == unidadMed.unid) fila[3] = "UNIDADES";   
                    aux.addRow(fila);            
                }

            }
            
        }catch(Exception e){
             JOptionPane.showMessageDialog(null, e.getMessage(), "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
        }
        
            
    }//GEN-LAST:event_btnAgregarInsumoActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        textID.setText(String.valueOf(logicaNegocio.obtenerID()));
        textNombre.setText("");
        jTextArea1.setText("");
        textPrecio.setText("");
        texIDInsumo.setText("");
        textCantidadInsumo.setText("");
        textNombreInsumo.setText("");
        textUnidadInsumo.setText("");
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        
    }//GEN-LAST:event_btnLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameProductos(null,false).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarInsumo;
    private javax.swing.JButton btnBuscarInsumo;
    private javax.swing.JButton btnEliminarInsumo;
    private javax.swing.JButton btnEliminarProducto;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificarProducto;
    private javax.swing.JButton btnRegistarProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelPrecio;
    private javax.swing.JLabel labelReceta;
    private javax.swing.JTextField texIDInsumo;
    private javax.swing.JTextField textCantidadInsumo;
    private javax.swing.JTextField textID;
    private javax.swing.JTextField textNombre;
    private javax.swing.JTextField textNombreInsumo;
    private javax.swing.JTextField textPrecio;
    private javax.swing.JTextField textUnidadInsumo;
    // End of variables declaration//GEN-END:variables
}
